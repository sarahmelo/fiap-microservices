name: CI - Compilação e Testes

on:
  push:
    branches: [ '*' ]  # Ativar para qualquer branch
  pull_request:
    branches: [ main, develop, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Compilar serviço Users
        working-directory: ./users
        run: |
          mvn clean package -DskipTests

      - name: Compilar serviço Sprinkler
        working-directory: ./sprinkler
        run: |
          mvn clean package -DskipTests

      - name: Upload do artefato Users
        uses: actions/upload-artifact@v4
        with:
          name: users-artifact
          path: ./users/target/*.jar

      - name: Upload do artefato Sprinkler
        uses: actions/upload-artifact@v4
        with:
          name: sprinkler-artifact
          path: ./sprinkler/target/*.jar
      
      # Login no Docker Hub
      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      # Definir nome e tag da imagem baseado na branch
      - name: Definir ambiente
        id: set-env
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
          if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          elif [[ "$BRANCH_NAME" == "develop" || "$BRANCH_NAME" == "developer" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
          fi
      
      # Build e Push da imagem Docker Users
      - name: Build e Push da imagem Docker Users
        uses: docker/build-push-action@v4
        with:
          context: ./users
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/fiap-users:${{ env.ENV }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/fiap-users:${{ env.ENV }}-${{ github.sha }}
      
      # Build e Push da imagem Docker Sprinkler
      - name: Build e Push da imagem Docker Sprinkler
        uses: docker/build-push-action@v4
        with:
          context: ./sprinkler
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/fiap-sprinkler:${{ env.ENV }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/fiap-sprinkler:${{ env.ENV }}-${{ github.sha }}
